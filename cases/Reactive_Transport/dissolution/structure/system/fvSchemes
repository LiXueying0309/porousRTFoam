/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     7;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default         none;
    //div(phi,U)      bounded Gauss linearUpwind grad(U);
    //div(phi,k)      Gauss linear;
    div(phi,epsilon) Gauss linear;
    div(phi,omega)  Gauss linear;
    div(phi,v2)     Gauss linear;
    div((nuEff*dev2(T(grad(U))))) Gauss linear;
    div(nonlinearStress) Gauss linear;
	div(phi,Cca)	Gauss linear;
	div(phi,Cna)	Gauss linear;
	div(phi,Ccl)	Gauss linear;
	div(phi,Ch)		Gauss linear;
	div(phi,Cco3)	Gauss linear;
	div(phi,Ccaco3) Gauss linear;
   
    div(phi,U)      Gauss LUST grad(U);
    div((nuEff*dev2(T(grad(U))))) Gauss linear;
    div(rhoPhiByEps,U)  Gauss linear;
    div(HbyA)           Gauss linear;
    div(rhofHbyA)       Gauss linear;
    div(volIntegrate(rhofPhi))   Gauss linear;
    div(phi,Wf)       Gauss linear;
    div(volIntegrate(phi))   Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear uncorrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         uncorrected;
}

wallDist
{
    method meshWave;
}


// ************************************************************************* //
